MUSIC STORE ANALYSIS sql

---SET 1
---Q1. Who is the senior most employee based on job title?

SELECT first_name, last_name , levels
from employee
ORDER BY levels desc
limit 1

---Q2. Which countries have the most Invoices?

SELECT billing_country, COUNT(total) AS Invoicesno
FROM invoice
GROUP BY billing_country
ORDER BY 2 DESC

---Q3. What are top 3 values of total invoice?

SELECT total
FROM invoice
ORDER BY total desc
limit 3

---Q4. Which city has the best customers? 
---We would like to throw a promotional Music Festival in the city we made the most money. 
---Write a query that returns one city that has the highest sum of invoice totals. 
---Return both the city name & sum of all invoice totals

SELECT billing_city, SUM(total)
FROM invoice
Group by billing_city
ORDER BY SUM(total) desc
limit 1

---Q5.Who is the best customer? 
---The customer who has spent the most money will be declared the best customer. 
---Write a query that returns the person who has spent the most money

SELECT customer.customer_id, customer.first_name, customer.last_name , SUM(invoice.total) AS totalspending
FROM customer
JOIN invoice ON invoice.customer_id = customer.customer_id
GROUP BY customer.customer_id
ORDER BY 4 desc
limit 1


---SET2
---Q6.Write query to return the email, first name, last name, & Genre of all Rock Music listeners. 
---Return your list ordered alphabetically by email starting with A

SELECT DISTINCT email, first_name,last_name
FROM customer
JOIN invoice ON invoice.customer_id = customer.customer_id
JOIN invoice_line ON invoice_line.invoice_id = invoice.invoice_id
WHERE track_id IN(
	SELECT track_id FROM track
    JOIN genre ON track.genre_id = genre.genre_id
    WHERE genre.name LIKE 'Rock'
)
ORDER BY email



---Q7.Let's invite the artists who have written the most rock music in our dataset. 
---Write a query that returns the Artist name and total track count of the top 10 rock bands

SELECT artist.name , COUNT(artist.artist_id) AS trackcount
FROM artist
JOIN album ON album.artist_id = artist.artist_id
JOIN track ON track.album_id =album.album_id
WHERE genre_id IN(
	SELECT genre.genre_id FROM genre
    JOIN track ON track.genre_id = genre.genre_id
    WHERE genre.name LIKE 'Rock'
)
GROUP BY 1
ORDER BY 2 desc
limit 10


---Q8. Return all the track names that have a song length longer than the average song length.
---Return the Name and Milliseconds for each track. 
----Order by the song length with the longest songs listed first

SELECT name ,milliseconds
FROM track
WHERE milliseconds >(
      SELECT AVG(milliseconds) AS avg_track_length
	  FROM track
	)
ORDER BY milliseconds desc











---SET3
---Q9.Find how much amount spent by each customer on artists? 
---Write a query to return customer name, artist name and total spent

WITH best_selling_artist AS(
   SELECT artist.artist_id AS artist_id, artist.name AS artist_name, SUM(invoice_line.unit_price * invoice_line.quantity) AS total_sales
   FROM invoice_line
   JOIN track ON track.track_id = invoice_line.track_id
	JOIN album ON album.album_id = track.album_id
	JOIN artist ON artist.artist_id = album.artist_id
	GROUP BY 1,2
	ORDER BY 3 DESC
	)
SELECT customer.first_name, customer.last_name,bsa.artist_name, SUM(il.unit_price * il.quantity) AS amount_spent
FROM invoice i
JOIN customer ON customer.customer_id = i.customer_id
JOIN invoice_line il ON il.invoice_id = i.invoice_id
JOIN track ON track.track_id = il.track_id
JOIN album ON album.album_id = track.album_id
JOIN best_selling_artist bsa ON bsa.artist_id = album.artist_id
GROUP BY 1,2,3
ORDER BY 4 desc


---Q10. We want to find out the most popular music Genre for each country
---We determine the most popular genre as the genre with the highest amount of purchases. 
---Write a query that returns each country along with the top Genre. 
---For countries where the maximum number of purchases is shared return all Genres




WITH popular_genre AS(
   SELECT customer.country, genre.name, COUNT(invoice_line.quantity) AS purchases,
	ROW_NUMBER() OVER (PARTITION BY customer.country ORDER BY COUNT(invoice_line.quantity)desc ) AS RowNo
	FROM invoice_line
	JOIN invoice ON invoice_line.invoice_id = invoice.invoice_id
	JOIN customer ON customer.customer_id = invoice.customer_id
	JOIN track ON track.track_id = invoice_line.track_id
	JOIN genre ON genre.genre_id = track.genre_id
	group by 1,2
	order by 3 desc
)
SELECT * FROM popular_genre WHERE RowNo <= 1


---Q11.  Write a query that determines the customer that has spent the most on music for each country.
---Write a query that returns the country along with the top customer and how much they spent. 
---For countries where the top amount spent is shared, provide all customers who spent this amount

WITH maximum_spent AS(
   SELECT invoice.billing_country, customer.customer_id, SUM(invoice.total) AS amount_spent,
	ROW_NUMBER() OVER (PARTITION BY customer.country ORDER BY SUM(invoice.total) desc) AS RowNo
	FROM invoice
	JOIN customer ON invoice.customer_id = customer.customer_id
	GROUP BY 1,2
	ORDER BY 3 desc
	)
SELECT * FROM maximum_spent WHERE RowNo <=1

---another method:

with recursive
  customer_with_country AS(
    SELECT customer.customer_id, invoice.billing_country, SUM(invoice.total) AS amount_spent
	FROM invoice
	JOIN customer ON invoice.customer_id = customer.customer_id
	GROUP BY 1,2
	ORDER BY 3 desc),
	
  customer_max_spending AS(
     SELECT billing_country,MAX(amount_spent) AS max_amount
     FROM customer_with_country
     GROUP BY 1)
	 
SELECT cc.customer_id, cc.billing_country, cc.amount_spent
FROM customer_with_country cc
JOIN customer_max_spending ms
ON cc.billing_country = ms.billing_country
WHERE cc.amount_spent= ms.max_amount
GROUP BY 1,2,3
ORDER BY 3 DESC
